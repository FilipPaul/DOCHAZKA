import os
from PyQt5 import QtWidgets,QtCore

#Automaticaly update files from QT designer
#if os.path.exists("NEW_record.py"):
#    os.remove("NEW_record.py")
#bashCommand = "pyuic5 -o NEW_record.py NEW_record.ui"
#os.system(bashCommand)


from AutomateSuperPackage.AutomateSuperModule import SuperClass


#PyQT IMPORTS
from NEW_record import Ui_Form as designer_UI

class MainWindowApp(QtWidgets.QWidget):
    def __init__(self,name:str,surname:str, *args, **kwargs):#args = multiple input variables, **kvargs multiple keyword variables (dictionaries, touples etc.)
    ################ INIT Function ##################
        self.name = name
        self.surname = surname
        super().__init__(*args, **kwargs)#super inherits all methods and properties from its parent  (QWIDGET classes)
        #Load UI forms creaated in QTdDesigner
        self.ui = designer_UI() #UI form generated by UI designe
        self.ui.setupUi(self)

        self.ui.cbox_state.addItems(['Prichod', 'Odchod', 'Doktor', 'Prac Cesta', 'Obed'])
        self.ui.cbox_state.setCurrentIndex(1)
       
        self.ui.la_name.setText(self.name)
        self.ui.la_surname.setText(self.surname)
        self.ui.de_date_time.setDateTime(QtCore.QDateTime.currentDateTime())
        self.ui.pb_add.clicked.connect(self.addRecord)        
        self.edit_state = ""
        self.edit_date = ""
        self.edit_time = ""
        self.ready_flag = 0


    def addRecord(self):
        self.edit_date = self.ui.de_date_time.date()
        self.edit_time = self.ui.de_date_time.time()
        self.edit_state = self.ui.cbox_state.currentText()
        self.ready_flag = 1
        print(self.edit_date.toPyDate().isoformat(), self.edit_time.toString() ,self.edit_state)

if __name__ == '__main__':
    #Read config file:

    app = QtWidgets.QApplication([])
    MainWindow = MainWindowApp(name = "FASDF",surname = "ASDASD")
    #MainWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint)
    MainWindow.show() 
        # return self.currentText()
    #MainWindow.showMaximized()
    #self.showFullScreen()
    app.exec_()


